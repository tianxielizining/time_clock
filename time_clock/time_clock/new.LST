C51 COMPILER V9.51   NEW                                                                   09/13/2017 23:39:18 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE NEW
OBJECT MODULE PLACED IN new.OBJ
COMPILER INVOKED BY: D:\C51\BIN\C51.EXE new.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "STC15F2K60S2.H"
   2          #define uint unsigned int
   3          #define uchar unsigned char
   4          /*定义部分*/
   5          sbit beep=P3^4;//蜂鸣器
   6          char beepflag; //蜂鸣器标志位
   7          uchar flag;//功能切换标志位
   8          uchar flag1; //设置时间时，作为时分秒的选择位
   9          uchar dateflag;
  10          bit stopflag;
  11          bit resetflag;
  12          uchar ring;//闹钟开关标志位
  13          uint  num;
  14          uchar sec;
  15          uchar min;
  16          uchar hour;//时分秒
  17          uint  num1;
  18          uchar sec1;
  19          uchar min1;//秒表分、秒、毫秒
  20          uchar clocksec;
  21          uchar clockmin;
  22          uchar clockhour;//设置闹钟时间
  23          uchar day;
  24          uchar month;
  25          uint year;//年月日
  26          uchar daynum;//每月的天数
  27          uchar duanxuan[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x40}; //共阴数码管编码 0--9和- 
  28          uchar weixuan[]={0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07}; 
  29          uchar dispbuf[8]={0,0,0,0,0,0,0,0};
  30          uint tcnt=0;
  31          /*数据初始化函数VarInit*/
  32          
  33          void VarInit(void) 
  34          {
  35   1        P2M0=0xff;
  36   1        P2M1=0x00;
  37   1        P0M0=0xff;
  38   1        P0M1=0x00;//P0，P2都设置为推挽输出
  39   1      
  40   1        num= 0;
  41   1        sec= 0;
  42   1        min= 0;
  43   1        hour= 12;//初始化时间
  44   1      
  45   1        num1=0; 
  46   1        sec1=0; 
  47   1        min1=0;//初始化秒表
  48   1        
  49   1        clocksec=0; 
  50   1        clockmin=0; 
  51   1        clockhour=0;//初始化闹钟时间
  52   1      
  53   1        day= 10;
  54   1        month=9; 
  55   1        year=2017;//初始化日期
C51 COMPILER V9.51   NEW                                                                   09/13/2017 23:39:18 PAGE 2   

  56   1      
  57   1        flag=0;
  58   1        flag1 =0;
  59   1        dateflag= 1; 
  60   1        stopflag=0;
  61   1        resetflag=0;
  62   1        ring=0;
  63   1      }
  64          
  65          /*延时*/
  66          
  67          void Delay_ms(uint xms)
  68          {
  69   1        uchar j,k;
  70   1        for(j=xms;j>0;j--)
  71   1          for(k= 123;k>0;k--);
  72   1      }
  73          
  74          /*计时器初始化*/
  75          
  76          void TimerInit(void) 
  77          {
  78   1        TMOD=0x02;
  79   1        TH0=0x09; //装入高八位数
  80   1        TL0=0x66;//低八位
  81   1        TR0=1;//计数器开始工作
  82   1        ET0=1;
  83   1        EX0=1;
  84   1        EA=1;//开总中断
  85   1      }
  86          
  87          /*计时器中断函数*/
  88          
  89          void Time1() interrupt 1 using 0 
  90          {
  91   1        tcnt++;
  92   1        if(tcnt==40)
  93   1        {
  94   2            tcnt=0;
  95   2            num++;
  96   2            if(num==100)
  97   2            {
  98   3              num=0;
  99   3              sec++;
 100   3              dateflag= 1 ;
 101   3            }
 102   2            if(sec==60)
 103   2            {
 104   3              sec= 0;
 105   3              min++;
 106   3            }
 107   2            if(min==60)
 108   2            {
 109   3              min= 0;
 110   3              hour++;
 111   3            }
 112   2            if(hour==24)
 113   2            {
 114   3              hour= 0;
 115   3            }
 116   2            if(stopflag== 1)
 117   2            {
C51 COMPILER V9.51   NEW                                                                   09/13/2017 23:39:18 PAGE 3   

 118   3                num1++;
 119   3                if(num1==100)
 120   3                {
 121   4                  num1=0;
 122   4                  sec1++;
 123   4                }
 124   3                if(sec1==60)
 125   3                {
 126   4                  sec1 = 0;
 127   4                  min1 ++;
 128   4                }
 129   3                if(min1==60)
 130   3                {
 131   4                  min1 = 0;
 132   4                }
 133   3            }
 134   2        }
 135   1      }
 136          
 137          /*调节时间*/ 
 138          
 139          void SetTime()
 140          {
 141   1        if(flag==1)
 142   1        {
 143   2          if(P17==0)
 144   2          {
 145   3            Delay_ms(10);
 146   3            if(P17==0)
 147   3            {
 148   4              while(!P17);
 149   4              Delay_ms(10);
 150   4              while(!P17);
 151   4              flag1++;
 152   4              if(flag1==3)
 153   4              {
 154   5                flag1=0;
 155   5                sec=0;
 156   5              }
 157   4            }
 158   3          }
 159   2          switch(flag1)
 160   2          {
 161   3            case 0:
 162   3            if(P33==0) 
 163   3            {
 164   4              Delay_ms(10);
 165   4              if(P33==0)
 166   4              {
 167   5                while(!P33);
 168   5                Delay_ms(10);
 169   5                while(!P33);
 170   5                sec++;
 171   5                if(sec==60)
 172   5                  sec=0;
 173   5              }
 174   4            }
 175   3            break;
 176   3            case 1:
 177   3            if(P33==0)
 178   3            {
 179   4              Delay_ms(10);
C51 COMPILER V9.51   NEW                                                                   09/13/2017 23:39:18 PAGE 4   

 180   4              if(P33==0)
 181   4              {
 182   5                while(!P33);
 183   5                Delay_ms(10);
 184   5                while(!P33);
 185   5                min++;
 186   5                if(min==60)
 187   5                  min=0;
 188   5              }
 189   4            }
 190   3            break;
 191   3            case 2:
 192   3            if(P33==0)
 193   3            {
 194   4              Delay_ms(10);
 195   4              if(P33==0)
 196   4              {
 197   5                while(!P33);
 198   5                Delay_ms(10);
 199   5                while(!P33);
 200   5                hour++;
 201   5                if(hour==24)
 202   5                  hour=0;
 203   5              }
 204   4            }
 205   3            break;
 206   3      
 207   3          }
 208   2        }
 209   1      }
 210          
 211          /*设置闹钟*/
 212          
 213          void AlarmClock() 
 214          {
 215   1        if(flag==2)
 216   1        {
 217   2          if(P17==0)
 218   2          {
 219   3            Delay_ms(10);
 220   3            if(P17==0)
 221   3            {
 222   4              while(!P17);
 223   4              Delay_ms(10);
 224   4              while(!P17);
 225   4              flag1++;
 226   4              if(flag1==3)
 227   4                flag1=0;
 228   4            }
 229   3          }
 230   2          switch (flag1)
 231   2          {
 232   3            case 0:
 233   3              if(P33==0)
 234   3              {
 235   4                Delay_ms(10);
 236   4                if(P33==0)
 237   4                {
 238   5                  while(!P33);
 239   5                  Delay_ms(10);
 240   5                  while(!P33);
 241   5                  clocksec++;
C51 COMPILER V9.51   NEW                                                                   09/13/2017 23:39:18 PAGE 5   

 242   5                  if(clocksec==60)
 243   5                    clocksec=0;
 244   5                }
 245   4              }
 246   3              break;
 247   3            case 1:
 248   3              if(P33==0)
 249   3              {
 250   4                Delay_ms(10);
 251   4                if(P33==0)
 252   4                {
 253   5                  while(!P33);
 254   5                  Delay_ms(10);
 255   5                  while(!P33);
 256   5                  clockmin++;
 257   5                  if(clockmin==60)
 258   5                    clockmin=0;
 259   5                }
 260   4              }
 261   3              break;
 262   3            case 2:
 263   3              if(P33==0)
 264   3              {
 265   4                Delay_ms(10);
 266   4                if(P33==0)
 267   4                {
 268   5                  while( !P33);
 269   5                  Delay_ms(10);
 270   5                  while(!P33);
 271   5                  clockhour++;
 272   5                  if(clockhour==24)
 273   5                    clockhour=0;
 274   5                }
 275   4              }
 276   3              break;
 277   3          }
 278   2        }
 279   1      
 280   1          if((clocksec==sec)&&(clockmin==min)&&(clockhour==hour))
 281   1          {
 282   2            beepflag=0;
 283   2            beep=0;
 284   2            Delay_ms( 1);
 285   2            beep= 1 ;
 286   2            Delay_ms( 1);
 287   2            beepflag++;
 288   2          }
 289   1        else
 290   1        {
 291   2          beep=1;
 292   2          beepflag=0;
 293   2        }
 294   1        if(beepflag==1)
 295   1        {
 296   2          beep=0;
 297   2          Delay_ms( 1);
 298   2          beep= 1 ;
 299   2          Delay_ms( 1);
 300   2        }
 301   1      }
 302          
 303          /*日期设置*/
C51 COMPILER V9.51   NEW                                                                   09/13/2017 23:39:18 PAGE 6   

 304          
 305          void SetDate()
 306          {
 307   1        switch(month)
 308   1        {
 309   2          case 1:
 310   2          case 3:
 311   2          case 5:
 312   2          case 7:
 313   2          case 8:
 314   2          case 10:
 315   2          case 12: daynum= 31;
 316   2                break;
 317   2          case 4:
 318   2          case 6:
 319   2          case 9:
 320   2          case 11: daynum= 30;
 321   2                break;
 322   2          case 2:
 323   2            if((((year%4)==0&&(year% 100) !=0)) || (year% 100)==0&&(year%400)==0)
 324   2            {
 325   3              daynum= 29;
 326   3            } 
 327   2            else 
 328   2            {
 329   3              daynum= 28;
 330   3            }
 331   2            break;
 332   2        }
 333   1        if(flag==3)
 334   1        {
 335   2          if(P17==0)
 336   2          {
 337   3            Delay_ms(10);
 338   3            if(P17==0)
 339   3            {
 340   4              while(!P17);
 341   4              Delay_ms(10);
 342   4              while(!P17);
 343   4              flag1++;
 344   4              if(flag1==3)
 345   4              {
 346   5                flag1=0;
 347   5              }
 348   4            }
 349   3          }
 350   2          switch (flag1)
 351   2          {
 352   3            case 0:
 353   3              if(P33==0) 
 354   3              {
 355   4                Delay_ms(10); 
 356   4                if(P33==0)
 357   4                {
 358   5                  while(!P33);
 359   5                  Delay_ms( 10);
 360   5                  while(!P33);
 361   5                  day++;
 362   5                  if(day>=(daynum+ 1 ))
 363   5                    day= 1 ;
 364   5      
 365   5                }
C51 COMPILER V9.51   NEW                                                                   09/13/2017 23:39:18 PAGE 7   

 366   4              }
 367   3              break;
 368   3            case 1:
 369   3              if(P33==0)
 370   3              {
 371   4                Delay_ms(10);
 372   4                if(P33==0)
 373   4                {
 374   5                  while(!P33);
 375   5                  Delay_ms(10);
 376   5                  while(!P33);
 377   5                  month++;
 378   5                  if(month>= 13)
 379   5                    month= 1;
 380   5                }
 381   4              }
 382   3              break;
 383   3            case 2:
 384   3              if(P33==0)
 385   3              {
 386   4                Delay_ms(10);
 387   4                if(P33==0)
 388   4                {
 389   5                  while(!P33);
 390   5                  Delay_ms(10);
 391   5                  while(!P33);
 392   5                  year++;
 393   5                  if(year==3000)
 394   5                    year=2017;
 395   5                }
 396   4              }
 397   3              break;
 398   3          }
 399   2        }
 400   1        if((hour==23)&&(min==59)&&(sec==59)&&(dateflag== 1)) 
 401   1        {
 402   2          dateflag=0;
 403   2          day++;
 404   2          if(day==(daynum+1)) 
 405   2          {
 406   3            day=1;
 407   3            month++;
 408   3            if(month== 13)
 409   3            {
 410   4              month= 1 ;
 411   4              year++;
 412   4            }
 413   3          }
 414   2        }
 415   1      }
 416          
 417          /*秒表程序*/ 
 418          
 419          void StopWatch() 
 420          {
 421   1      if (flag==4)
 422   1      { 
 423   2        if(P17==0)
 424   2        {
 425   3          Delay_ms(10);
 426   3          if(P17==0)
 427   3          {
C51 COMPILER V9.51   NEW                                                                   09/13/2017 23:39:18 PAGE 8   

 428   4            while(!P17);
 429   4            Delay_ms( 10);
 430   4            while(!P17);
 431   4            stopflag=~stopflag;
 432   4          }
 433   3        }
 434   2        if(P33==0)
 435   2        {
 436   3          Delay_ms(10);
 437   3          if(P33==0)
 438   3          {
 439   4            while(!P33);
 440   4            Delay_ms(10);
 441   4            while(!P33);
 442   4            resetflag=~resetflag;
 443   4            if(resetflag== 1 )
 444   4            {
 445   5              resetflag=0;
 446   5              stopflag=0;
 447   5              num1=0;
 448   5              sec1=0;
 449   5              min1=0;
 450   5            }
 451   4          }
 452   3        }
 453   2      }
 454   1      }
 455          
 456          /*显示程序*/
 457          
 458          void Display()
 459          {
 460   1        if(flag==0||flag== 1)
 461   1        {
 462   2          uchar wei_1;
 463   2          uchar wei_2;
 464   2          dispbuf[2]=10;
 465   2          dispbuf[5]=10;
 466   2          num1=0; 
 467   2          sec1=0; 
 468   2          min1=0;//初始化秒表
 469   2          wei_1 =hour/10;
 470   2          wei_2 = hour%10;
 471   2          dispbuf[0]=wei_1;
 472   2          dispbuf[1]=wei_2;
 473   2          wei_1 =min/10; 
 474   2          wei_2 = min%10; 
 475   2          dispbuf[3]=wei_1;
 476   2          dispbuf[4]=wei_2;
 477   2          wei_1 = sec/10; 
 478   2          wei_2 = sec%10; 
 479   2          dispbuf[6]=wei_1;
 480   2          dispbuf[7]=wei_2;
 481   2          P0=duanxuan[dispbuf[0]];
 482   2          P2=weixuan[0];
 483   2          Delay_ms(10);
 484   2          P0=duanxuan[dispbuf[1]];
 485   2          P2=weixuan[1];
 486   2          Delay_ms(10);
 487   2          P0=duanxuan[dispbuf[2]];
 488   2          P2=weixuan[2];
 489   2          Delay_ms(10);
C51 COMPILER V9.51   NEW                                                                   09/13/2017 23:39:18 PAGE 9   

 490   2          P0=duanxuan[dispbuf[3]];
 491   2          P2=weixuan[3];
 492   2          Delay_ms(10);
 493   2          P0=duanxuan[dispbuf[4]];
 494   2          P2=weixuan[4];
 495   2          Delay_ms(10);
 496   2          P0=duanxuan[dispbuf[5]];
 497   2          P2=weixuan[5];
 498   2          Delay_ms(10);
 499   2          P0=duanxuan[dispbuf[6]];
 500   2          P2=weixuan[6];
 501   2          Delay_ms(10);
 502   2          P0=duanxuan[dispbuf[7]];
 503   2          P2=weixuan[7];
 504   2          Delay_ms(10);
 505   2        }
 506   1        if(flag==2)
 507   1        {
 508   2          uchar wei_1;
 509   2          uchar wei_2;
 510   2          dispbuf[2]=10;
 511   2          dispbuf[5]=10;
 512   2          wei_1 =clockhour/10;//显示小时
 513   2          wei_2 = clockhour%10;
 514   2          dispbuf[0]=wei_1;
 515   2          dispbuf[1]=wei_2;
 516   2          wei_1 =clockmin/10;//显示分钟
 517   2          wei_2 = clockmin%10;
 518   2          dispbuf[3]=wei_1;
 519   2          dispbuf[4]=wei_2;
 520   2          wei_1 = clocksec/10;
 521   2          wei_2 = clocksec%10; 
 522   2          dispbuf[6]=wei_1;
 523   2          dispbuf[7]=wei_2;
 524   2          P0=duanxuan[dispbuf[0]];
 525   2          P2=weixuan[0];
 526   2          Delay_ms(10);
 527   2          P0=duanxuan[dispbuf[1]];
 528   2          P2=weixuan[1];
 529   2          Delay_ms(10);
 530   2          P0=duanxuan[dispbuf[2]];
 531   2          P2=weixuan[2];
 532   2          Delay_ms(10);
 533   2          P0=duanxuan[dispbuf[3]];
 534   2          P2=weixuan[3];
 535   2          Delay_ms(10);
 536   2          P0=duanxuan[dispbuf[4]];
 537   2          P2=weixuan[4];
 538   2          Delay_ms(10);
 539   2          P0=duanxuan[dispbuf[5]];
 540   2          P2=weixuan[5];
 541   2          Delay_ms(10);
 542   2          P0=duanxuan[dispbuf[6]];
 543   2          P2=weixuan[6];
 544   2          Delay_ms(10);
 545   2          P0=duanxuan[dispbuf[7]];
 546   2          P2=weixuan[7];
 547   2          Delay_ms(10);
 548   2        }
 549   1        if(flag==3)
 550   1        {
 551   2          uchar wei_1;
C51 COMPILER V9.51   NEW                                                                   09/13/2017 23:39:18 PAGE 10  

 552   2          uchar wei_2;
 553   2          dispbuf[2]=10;
 554   2          dispbuf[5]=10;
 555   2          wei_1 =(year%100)/10;    //显示年
 556   2          wei_2 = year% 10;
 557   2          dispbuf[0]=wei_1;
 558   2          dispbuf[1]=wei_2;
 559   2          wei_1 =month/10;      //显示月
 560   2          wei_2 = month%10;
 561   2          dispbuf[3]=wei_1;
 562   2          dispbuf[4]=wei_2;
 563   2          wei_1 =day/10;//显示日 
 564   2          wei_2 = day%10; 
 565   2          dispbuf[6]=wei_1;
 566   2          dispbuf[7]=wei_2;
 567   2          P0=duanxuan[dispbuf[0]];
 568   2          P2=weixuan[0];
 569   2          Delay_ms(10);
 570   2          P0=duanxuan[dispbuf[1]];
 571   2          P2=weixuan[1];
 572   2          Delay_ms(10);
 573   2          P0=duanxuan[dispbuf[2]];
 574   2          P2=weixuan[2];
 575   2          Delay_ms(10);
 576   2          P0=duanxuan[dispbuf[3]];
 577   2          P2=weixuan[3];
 578   2          Delay_ms(10);
 579   2          P0=duanxuan[dispbuf[4]];
 580   2          P2=weixuan[4];
 581   2          Delay_ms(10);
 582   2          P0=duanxuan[dispbuf[5]];
 583   2          P2=weixuan[5];
 584   2          Delay_ms(10);
 585   2          P0=duanxuan[dispbuf[6]];
 586   2          P2=weixuan[6];
 587   2          Delay_ms(10);
 588   2          P0=duanxuan[dispbuf[7]];
 589   2          P2=weixuan[7];
 590   2          Delay_ms(10);
 591   2        }
 592   1        if(flag==4)
 593   1        {
 594   2          uchar wei_1;
 595   2          uchar wei_2;
 596   2          wei_1 = (min1%100)/10; //显示分钟 
 597   2          wei_2 = min1%10;
 598   2          dispbuf[0]=wei_1;
 599   2          dispbuf[1]=wei_2;
 600   2          wei_1 =sec1/10; //显示秒 
 601   2          wei_2 = sec1%10; 
 602   2          dispbuf[3]=wei_1;
 603   2          dispbuf[4]=wei_2;
 604   2          wei_1 =num1/10;//显示毫秒级
 605   2          wei_2 = num1%10; 
 606   2          dispbuf[6]=wei_1;
 607   2          dispbuf[7]=wei_2;
 608   2          P0=duanxuan[dispbuf[0]];
 609   2          P2=weixuan[0];
 610   2          Delay_ms(10);
 611   2          P0=duanxuan[dispbuf[1]];
 612   2          P2=weixuan[1];
 613   2          Delay_ms(10);
C51 COMPILER V9.51   NEW                                                                   09/13/2017 23:39:18 PAGE 11  

 614   2          P0=duanxuan[dispbuf[2]];
 615   2          P2=weixuan[2];
 616   2          Delay_ms(10);
 617   2          P0=duanxuan[dispbuf[3]];
 618   2          P2=weixuan[3];
 619   2          Delay_ms(10);
 620   2          P0=duanxuan[dispbuf[4]];
 621   2          P2=weixuan[4];
 622   2          Delay_ms(10);
 623   2          P0=duanxuan[dispbuf[5]];
 624   2          P2=weixuan[5];
 625   2          Delay_ms(10);
 626   2          P0=duanxuan[dispbuf[6]];
 627   2          P2=weixuan[6];
 628   2          Delay_ms(10);
 629   2          P0=duanxuan[dispbuf[7]];
 630   2          P2=weixuan[7];
 631   2          Delay_ms(10);
 632   2        }
 633   1      }
 634          void main()
 635          {
 636   1        unsigned char i,j;
 637   1        VarInit();
 638   1        TimerInit();
 639   1        while( 1)
 640   1        {
 641   2          if(P32==0)
 642   2          {
 643   3            for(i=5;i>0;i--)
 644   3              for(j=248;j>0;j--);
 645   3            if(P32==0)
 646   3            {
 647   4              flag++;
 648   4              if (flag==5)
 649   4                flag=0;
 650   4              while(!P32);
 651   4              for(i=5;i>0;i--)
 652   4                for(j=248;j>0;j--);
 653   4              while(!P32);
 654   4            }
 655   3          }
 656   2          SetTime();
 657   2          AlarmClock(); 
 658   2          SetDate();
 659   2          StopWatch(); 
 660   2          Display();
 661   2        }
 662   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1539    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     51       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
